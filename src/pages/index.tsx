"use client";

import Head from "next/head";
import { useCallback, useState } from "react";
import { api } from "~/utils/api";

export default function Home() {
  const [value, setValue] = useState("");
  const handleInputChange = useCallback((v: string) => {
    setValue(v);
  }, []);
  const { data: list, refetch } = api.list.getAll.useQuery();
  const { mutate: addMutation } = api.list.add.useMutation({
    onSuccess: async () => {
      await handleRefresh();
    },
  });
  const { mutate: deleteMutation } = api.list.delete.useMutation({
    onSuccess: async () => {
      await handleRefresh();
    },
  });
  const { mutate: updateMutation } = api.list.update.useMutation({
    onSuccess: async () => {
      await handleRefresh();
    },
  });

  const handleRefresh = async () => {
    await refetch();
    setValue("");
  };

  const handleAdd = () => {
    addMutation({
      name: value,
    });
  };

  const handleUpdate = ({
    id,
    finished,
  }: {
    id: number;
    finished: boolean;
  }) => {
    updateMutation({
      id,
      finished,
    });
  };

  const handleDelete = (id: number) => {
    deleteMutation({
      id,
    });
  };
  return (
    <>
      <Head>
        <title>TODO List</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"
        ></link>
      </Head>
      <div className="flex min-h-screen flex-col items-center justify-center bg-gray-200 py-10">
        <div className="w-80 rounded-xl bg-white p-4 shadow">
          <div className="flex">
            <input
              className="mb-2 mr-2 w-full flex-initial rounded-xl bg-gray-100 p-2 pl-4 focus:outline-none focus:ring-2 focus:ring-blue-600"
              value={value}
              onChange={(e) => handleInputChange(e.target.value)}
            ></input>
            <button
              onClick={handleAdd}
              className="mb-2 w-20 flex-initial rounded-xl bg-blue-100 p-2 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-blue-600"
            >
              <span className="fa fa-plus text-blue-500"></span>
            </button>
          </div>
          {list?.map((l) => (
            <div
              key={l.id}
              className={`mb-2 rounded-xl ${
                l.finished ? "bg-green-100" : "bg-gray-100"
              } p-2`}
            >
              <div className="flex">
                <div className="flex-auto pl-2">
                  <div
                    className={`leading-tight text-gray-500 ${
                      l.finished ? "line-through" : ""
                    }`}
                  >
                    {l.name}
                  </div>
                </div>
                <div className="flex-none pr-2">
                  <div
                    onClick={() => handleDelete(l.id)}
                    className="float-right cursor-pointer text-red-500 hover:text-red-600"
                  >
                    <span className="fa fa-minus-circle"></span>
                  </div>
                </div>
                <div className="flex-none">
                  <div
                    onClick={() =>
                      handleUpdate({
                        id: l.id,
                        finished: !l.finished,
                      })
                    }
                    className="float-right cursor-pointer text-green-500 hover:text-red-600"
                  >
                    <span className="fa fa-check-circle"></span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </>
  );
}
